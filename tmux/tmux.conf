# : << ENDOFCONF
# ^^ Crazy hack to be able to run conf file as an inline script for some fancy
#    scripting action, shamelessly borrowed from:
#    https://github.com/gpakosz/.tmux/blob/master/.tmux.conf

# Set Terminal
set-option -g default-terminal 'screen-256color'

# Remap the Prefix to Ctrl+a
set -g prefix C-a
unbind C-b

# Environment Variable Updates
set-option -g update-environment 'SS_CLIENT SSH_CONNECTION DISPLAY SSH_ASKPASS \
    SSH_AUTH_SOCK SSH_AGENT_PID XAUTHORITY'

# Rebind Zoom away from Suspend
unbind z
unbind =
bind = resize-pane -Z

# Editing Mode
setw -g mode-keys vi
unbind [
unbind ]
bind Escape copy-mode #<prefix> Esc now enters copy mode
unbind p
bind p run-shell "tmux set-buffer \"$(xclip -o -selection primary)\"; tmux \
    paste-buffer"
bind -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi Escape send -X cancel
bind-key -T copy-mode-vi 'V' send -X rectangle-toggle
bind -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel \
    'xclip -i -selection primary'

# Window Navigation
bind-key -n C-Pagedown next-window
bind-key -n C-Pageup previous-window
bind -n C-k clear-history

# Easy Window Moving (Sequential Reshuffle)
bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1
set-option -g renumber-windows on

# Status Line
set -g status on
set -g status-interval 1
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
set -g status-left '#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold],\
#[fg=colour16]#[bg=colour254]#[bold]} #S #{?client_prefix,#[fg=colour31]\
#[bg=colour235]#[nobold],#[fg=colour254]#[bg=colour235]#[nobold]}'
set -g status-right '#(eval cut -c3- ~/.tmux.conf | sh -s status_right) #U@#H '
set -g status-right-length 150
set -g window-status-format "#[fg=colour244,bg=colour235] #I \
#[fg=colour31,bg=colour235] #[fg=colour31,bg=colour235]#W "
set -g window-status-current-format "#[fg=colour235,bg=colour31]\
#[fg=white,bg=colour31] #I  #[fg=colour231,bold]#W \
#[fg=colour31,bg=colour235,nobold]"
set -g window-status-last-style fg=colour31
set-window-option -g window-status-fg colour249
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-bell-attr none
set-window-option -g window-status-activity-fg yellow
set-window-option -g window-status-bell-fg red

# Mouse Control
set -g mouse off

# Toggle mouse mode on or off
bind m set -g mode-mouse on \; display 'Mouse: ON'
bind M set -g mode-mouse off \; display 'Mouse: OFF'

# Enable Focus Events
set -g focus-events on

# No Delay for escape
set -sg escape-time 0

# Start window numbering at 1
set -g base-index 1
setw -g pane-base-index 1

# Setup Window Titles
set-window-option -g automatic-rename on
set-option -g set-titles on
setw -g monitor-activity on
set -g visual-activity on

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator (got to install this)
is_vim='echo "#{pane_current_command}" \
    | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Window Splits (More like vim)
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"
unbind c
bind-key c new-window -c "$HOME" #ensure that new window starts in ~/

# Pane Border Customisation
set -g pane-border-bg colour235
set -g pane-border-fg colour238
set -g pane-active-border-bg colour235
set -g pane-active-border-fg colour51

# Vim Style Pane Selection (useful for when tmux-navigator glitches, no
# conflict)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Fast Pane Cycling (C-a, C-a cycles panes)
unbind ^A
bind ^A select-pane -t :.+

# Pane Resizing
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5
bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Reload Binding (can instantaneously reload tmux's configuration)
unbind r
bind r source-file ~/.tmux.conf \; display-message "Configuration Reloaded..."

# Keep all sessions
set-option -g destroy-unattached off

# Don't constrain all windows to the smallest client.
setw -g aggressive-resize on

# Send keys to panes in parallel
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Configuration for nested Tmux sessions
bind-key a send-prefix

# Reconfigure Choose Session
bind -n M-s choose-session \;

# Window Title Configuration
set -g set-titles-string "#h: [#I] #W" # host, window number, window title

# Configure Bell
set -g visual-bell off
set -g bell-action any

# Bind to Alert on Window Activity
bind m setw monitor-activity

# Shortcut to Kill Tmux
bind-key M-k run-shell "tmux kill-session -t #S"

# Raise an Alert after N Seconds of Silence
bind M command-prompt -p "monitor-silence (seconds):" "setw monitor-silence %%"

# Raise Alert on Specific String
bind W command-prompt -p "monitor-content:" "setw monitor-content %%"

# History Configuration
set -g history-limit 10000

# PLUGINS LIST

# Tmux Plugin Manager
set -g @copycat_search '/'
unbind n
unbind N
set -g @copycat_next 'n'
set -g @copycat_prev 'N'
set -g @plugin 'tmux-plugins/tmux-copycat'

set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
set -g @prefix_highlight_fg 'white'
set -g @prefix_highlight_bg 'blue'

set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @sidebar-tree-command 'tree -C'

set -g @plugin 'tmux-plugins/tmux-open'
set -g @open 'o'
set -g @open-editor 'C-o'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-save-bash-history 'off'
set -g @resurrect-processes 'vi vim nvim emacs man less more tail top irssi \
    mutt ssh psql mysql'

set -g @plugin 'tmux-plugins/tmux-continuum'
#set -g @continuum-restore 'on'
set -g @continuum-save-interval '30'

set -g @plugin 'seebi/tmux-colors-solarized'
set -g @colors-solarized '256'

set -g @plugin 'soyuka/tmux-current-pane-hostname'

set -g @plugin 'tmux-plugins/tpm'
run '~/.dotfiles/modules/tpm/tpm'

# ENDOFCONF
# status_right() {
#   cols=$(tmux display -p '#{client_width}')
#   if (( $cols >= 80 )); then
#     hoststat=$(hash tmux-mem-cpu-load && tmux-mem-cpu-load -i 10 || uptime | cut -d: -f5)
#     datestat=$(date)
#     echo "#[fg=colour233,bg=colour235,nobold,noitalics,nounderscore]#[fg=colour247,bg=colour233,nobold,noitalics,nounderscore] $datestat #[fg=colour252,bg=colour233,nobold,noitalics,nounderscore]#[fg=colour16,bg=colour252,bold,noitalics,nounderscore]"
#   else
#     echo '#[fg=colour253,bg=colour233,nobold,noitalics,nounderscore]#[fg=colour16,bg=colour252,bold,noitalics,nounderscore]'
#   fi
# }
# clone () {
#   orig=${1%-*}
#   let i=$( tmux list-sessions -F '#S' | sed -nE "/^${orig}-[0-9]+$/{s/[^0-9]//g;p}" | tail -n1 )+1
#   copy="$orig-$i"
#   TMUX= tmux new-session -d -t $orig -s $copy
#   tmux switch-client -t $copy
#   tmux set -q -t $copy destroy-unattached on
# }
# $@
# # vim: ft=tmux
